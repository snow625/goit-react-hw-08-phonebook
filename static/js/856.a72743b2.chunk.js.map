{"version":3,"file":"static/js/856.a72743b2.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selector.js","webpack://goit-react-hw-08-phonebook/./src/modules/PhoneBook/Contacts/ContactItem/contactItem.module.css?5598","modules/PhoneBook/Contacts/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/PhoneBook/Contacts/contacts.module.css?1798","modules/PhoneBook/Contacts/Contacts.jsx","modules/PhoneBook/ContactForm/initialState.js","modules/PhoneBook/ContactForm/fields.js","webpack://goit-react-hw-08-phonebook/./src/modules/PhoneBook/ContactForm/contactForm.module.css?a3d6","modules/PhoneBook/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/PhoneBook/Filter/filter.module.css?4106","modules/PhoneBook/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/PhoneBook/phoneBook.module.css?e836","modules/PhoneBook/PhoneBook.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/Button/button.module.css?dd0a","shared/components/Button/Button.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/textField.module.css?9fa7","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const getContacts = (store) => {\r\n  return store.contacts;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contactItem_item__QZpQA\",\"btn\":\"contactItem_btn__9Lnpz\"};","import { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../../../shared/components/Button\";\r\nimport s from \"./contactItem.module.css\";\r\nfunction ContactItem(props) {\r\n  const { number, name, onClick, id } = props;\r\n\r\n  return (\r\n    <li className={s.item}>\r\n      <p>{`${name}: ${number}`}</p>\r\n      <Button\r\n        text=\"Detele\"\r\n        type=\"button\"\r\n        onClick={(e) => {\r\n          onClick(id);\r\n        }}\r\n      />\r\n    </li>\r\n  );\r\n}\r\nContactItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default memo(ContactItem);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts_list__OipL3\"};","import PropTypes from \"prop-types\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport s from \"./contacts.module.css\";\r\nfunction Contacts({ items, onClick }) {\r\n  const elements = items.map((el) => {\r\n    const { number, name, id } = el;\r\n    return (\r\n      <ContactItem\r\n        key={id}\r\n        id={id}\r\n        onClick={onClick}\r\n        number={number}\r\n        name={name}\r\n      />\r\n    );\r\n  });\r\n  return <ul className={s.list}>{elements}</ul>;\r\n}\r\nContacts.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nContacts.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      number: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default Contacts;\r\n","export const initialState = { name: \"\", number: \"\" };\r\n","export const fields = {\r\n  name: {\r\n    label: \"Name\",\r\n    type: \"text\",\r\n    name: \"name\",\r\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    title:\r\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\r\n    required: true,\r\n    placeholder: \"enter name\",\r\n  },\r\n  number: {\r\n    label: \"Number\",\r\n    type: \"tel\",\r\n    name: \"number\",\r\n    title:\r\n      \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\r\n    required: true,\r\n    placeholder: \"enter number\",\r\n  },\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__CbhMJ\",\"label\":\"contactForm_label__TCiZB\",\"input\":\"contactForm_input__JaL-m\",\"btn\":\"contactForm_btn__bbf+x\"};","import { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport TextField from \"../../../shared/components/TextField\";\r\nimport Button from \"../../../shared/components/Button\";\r\n\r\nimport useForm from \"../../../shared/hooks/useForm\";\r\n\r\nimport { initialState } from \"./initialState\";\r\nimport { fields } from \"./fields\";\r\n\r\nimport s from \"./contactForm.module.css\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const { state, handleChange, handleSubmit } = useForm({\r\n    onSubmit,\r\n    initialState,\r\n  });\r\n  const { name, number } = state;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <TextField value={name} onChange={handleChange} {...fields.name} />\r\n      <TextField value={number} onChange={handleChange} {...fields.number} />\r\n      <Button text=\"Add contact\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default memo(ContactForm);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__aPlN+\",\"input\":\"filter_input__odi72\"};","import { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./filter.module.css\";\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        onChange={onChange}\r\n        className={s.input}\r\n        placeholder=\"enter name\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default memo(Filter);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"phoneBook_wrapper__0-PRi\"};","import { useSelector } from \"react-redux\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  fetchContacts,\r\n  removeContact,\r\n  addContact,\r\n} from \"../../redux/contacts/contacts-operation\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selector\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Contacts from \"./Contacts\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport Filter from \"./Filter\";\r\n\r\nimport s from \"./phoneBook.module.css\";\r\n\r\nconst PhoneBook = () => {\r\n  const [filter, setFilter] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const contactsStore = useSelector(getContacts);\r\n  const { items, error, loading } = contactsStore;\r\n  const filteredItems = () => {\r\n    if (!filter) {\r\n      return items;\r\n    }\r\n    const newItems = items.filter((e) => {\r\n      const { name } = e;\r\n      return name.toLowerCase().includes(filter.toLowerCase());\r\n    });\r\n    return newItems;\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const onAddPhone = useCallback(\r\n    (obj) => dispatch(addContact(obj)),\r\n    [dispatch]\r\n  );\r\n  const onRemovePhone = useCallback(\r\n    (id) => {\r\n      dispatch(removeContact(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const changeFilterState = useCallback(\r\n    ({ target: { value } }) => setFilter(value.trim()),\r\n    [setFilter]\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className={s.wrapper}>\r\n        <div>\r\n          <h1 className=\"title\">Phonebook</h1>\r\n          <ContactForm onSubmit={onAddPhone} />\r\n        </div>\r\n\r\n        <div>\r\n          <h2 className=\"title\">Contacts</h2>\r\n          <Filter onChange={changeFilterState} />\r\n          {loading && <p>Loading...</p>}\r\n          {error && <p>{`Error: ${error}`}</p>}\r\n          {items.length > 0 && !error && !loading && (\r\n            <Contacts items={filteredItems()} onClick={onRemovePhone} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhoneBook;\r\n","import PhoneBook from \"../../modules/PhoneBook\"\r\nconst ContactsPage = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <PhoneBook />\r\n    </div>\r\n  );\r\n};\r\nexport default ContactsPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__-rT6G\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  const { type, text, onClick } = props;\r\n  return (\r\n    <button className={s.btn} onClick={onClick} type={type}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nButton.defaultProps = {\r\n  type: \"submit\",\r\n  onClick: () => {},\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"textField_wrapper__J1qDe\",\"label\":\"textField_label__wJQAU\",\"input\":\"textField_input__f1HSj\"};","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport { useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./textField.module.css\";\r\n\r\nconst TextField = (props) => {\r\n  const {\r\n    label,\r\n    name,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required,\r\n    type,\r\n    pattern,\r\n    title,\r\n  } = props;\r\n  const id = useMemo(() => nanoid(), []);\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <label htmlFor={id} className={s.label}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        onChange={onChange}\r\n        id={id}\r\n        className={s.input}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        required={required}\r\n        pattern={pattern}\r\n        title={title}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nTextField.defaultProps = {\r\n  type: \"text\",\r\n  required: false,\r\n  onChange: () => {},\r\n};\r\n\r\nTextField.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool.isRequired,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n    PropTypes.bool,\r\n  ]),\r\n};\r\n\r\nexport default TextField;\r\n","import { useState } from \"react\";\r\n\r\nconst useForm = ({ onSubmit, initialState, isReset = true }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value, type, checked } = target;\r\n    const newValue = type === \"checkbox\" ? checked : value;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: newValue,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ ...state });\r\n    if (isReset) {\r\n      setState({ ...initialState });\r\n    }\r\n  };\r\n\r\n  return { state, setState, handleChange, handleSubmit };\r\n};\r\n\r\nexport default useForm;\r\n"],"names":["getContacts","store","contacts","ContactItem","props","number","name","onClick","id","className","s","Button","text","type","e","memo","Contacts","items","elements","map","el","defaultProps","initialState","fields","label","pattern","title","required","placeholder","ContactForm","onSubmit","useForm","state","handleChange","handleSubmit","TextField","value","onChange","Filter","useState","filter","setFilter","dispatch","useDispatch","contactsStore","useSelector","error","loading","useEffect","fetchContacts","onAddPhone","useCallback","obj","addContact","onRemovePhone","removeContact","changeFilterState","target","trim","length","toLowerCase","includes","useMemo","nanoid","htmlFor","isReset","setState","checked","newValue","prevState","preventDefault"],"sourceRoot":""}