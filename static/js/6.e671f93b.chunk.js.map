{"version":3,"file":"static/js/6.e671f93b.chunk.js","mappings":"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","sources":["modules/RegisterForm/initialState.js","modules/RegisterForm/fields.js","webpack://goit-react-hw-08-phonebook/./src/modules/RegisterForm/registerForm.module.css?7830","modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/Button/button.module.css?dd0a","shared/components/Button/Button.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/textField.module.css?9fa7","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n","export const fields = {\r\n  name: {\r\n    label: \"Name\",\r\n    name: \"name\",\r\n    type: \"text\",\r\n    placeholder: \"Input name\",\r\n    required: true,\r\n  },\r\n  email: {\r\n    label: \"Email\",\r\n    name: \"email\",\r\n    type: \"email\",\r\n    placeholder: \"Input email\",\r\n    required: true,\r\n  },\r\n  password: {\r\n    label: \"Password\",\r\n    name: \"password\",\r\n    type: \"password\",\r\n    placeholder: \"Input password\",\r\n    required: true,\r\n  },\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"registerForm_form__jspd1\"};","import useForm from \"../../shared/hooks/useForm\";\r\n\r\nimport { initialState } from \"./initialState\";\r\nimport { fields } from \"./fields\";\r\n\r\nimport TextField from \"../../shared/components/TextField\";\r\nimport Button from \"../../shared/components/Button\";\r\nimport s from \"./registerForm.module.css\";\r\n\r\nconst RegisterForm = ({ onSubmit }) => {\r\n  const { state, handleChange, handleSubmit } = useForm({\r\n    onSubmit,\r\n    initialState,\r\n  });\r\n  const { name, email, password } = state;\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <TextField value={name} onChange={handleChange} {...fields.name} />\r\n      <TextField value={email} onChange={handleChange} {...fields.email} />\r\n      <TextField\r\n        value={password}\r\n        onChange={handleChange}\r\n        {...fields.password}\r\n      />\r\n      <Button text=\"Register\" />\r\n    </form>\r\n  );\r\n};\r\nexport default RegisterForm;\r\n","import RegisterForm from \"../../modules/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n  const handleSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>RegisterPage</h2>\r\n      <RegisterForm onSubmit={handleSubmit} />;\r\n    </div>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__-rT6G\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  const { type, text, onClick } = props;\r\n  return (\r\n    <button className={s.btn} onClick={onClick} type={type}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nButton.defaultProps = {\r\n  type: \"submit\",\r\n  onClick: () => {},\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"textField_wrapper__J1qDe\",\"label\":\"textField_label__wJQAU\",\"input\":\"textField_input__f1HSj\"};","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport { useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./textField.module.css\";\r\n\r\nconst TextField = (props) => {\r\n  const {\r\n    label,\r\n    name,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required,\r\n    type,\r\n    pattern,\r\n    title,\r\n  } = props;\r\n  const id = useMemo(() => nanoid(), []);\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <label htmlFor={id} className={s.label}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        onChange={onChange}\r\n        id={id}\r\n        className={s.input}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        required={required}\r\n        pattern={pattern}\r\n        title={title}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nTextField.defaultProps = {\r\n  type: \"text\",\r\n  required: false,\r\n  onChange: () => {},\r\n};\r\n\r\nTextField.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool.isRequired,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n    PropTypes.bool,\r\n  ]),\r\n};\r\n\r\nexport default TextField;\r\n","import { useState } from \"react\";\r\n\r\nconst useForm = ({ onSubmit, initialState, isReset = true }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value, type, checked } = target;\r\n    const newValue = type === \"checkbox\" ? checked : value;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: newValue,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ ...state });\r\n    if (isReset) {\r\n      setState({ ...initialState });\r\n    }\r\n  };\r\n\r\n  return { state, setState, handleChange, handleSubmit };\r\n};\r\n\r\nexport default useForm;\r\n"],"names":["initialState","name","email","password","fields","label","type","placeholder","required","onSubmit","useForm","state","handleChange","handleSubmit","className","s","TextField","value","onChange","Button","text","data","console","log","props","onClick","defaultProps","pattern","title","id","useMemo","nanoid","htmlFor","isReset","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}